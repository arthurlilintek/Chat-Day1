Monetize with Ads
AdMob gives you a way to easily monetize your application, you simply add the AdView placeholder and Google handles the ad delivery for you.

Add AdMob dependency
Confirm the play-services-ads dependency exists in your app/build.gradle file:

==============================app/build.gradle==================================================

implementation 'com.google.android.gms:play-services-ads:15.0.0'

Add ads namespace
Verify that the ads namespace is in the root RelativeLayout tag in the activity_main.xml file.

===============================activity_main.xml================================================
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:ads="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
   
   
Add AdView to main layout
Include the view that will contain the ad. In your activity_main.xml file inside the root RelativeLayout add the following AdView tag.

====================================activity_main.xml=================================================
    <com.google.android.gms.ads.AdView
        android:id="@+id/adView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_alignParentTop="true"
        ads:adSize="BANNER"
        ads:adUnitId="@string/banner_unit_id">
    </com.google.android.gms.ads.AdView>


Update RecyclerView element to be laid out below the AdView, RecyclerView should now look like this:

======================================activity_main.xml================================================
<android.support.v7.widget.RecyclerView
   android:id="@+id/messageRecyclerView"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   android:layout_below="@+id/adView"
   android:layout_above="@+id/linearLayout"/>
   
   
Add AdView variable
In the MainActivity add an instance variable that represents the AdView:

=====================================MainActivity.java================================================
private AdView mAdView;
Request Ad


In MainActivity in the onCreate method, request the ad to be placed in the AdView:

======================================MainActivity.java==================================================
mAdView = (AdView) findViewById(R.id.adView);
AdRequest adRequest = new AdRequest.Builder().build();
mAdView.loadAd(adRequest);


Handle lifecycle events
In MainActivity add Activity lifecycle event handling, pausing, resuming and destroying where necessary.

====================================MainActivity.java=======================================================
@Override
public void onPause() {
   if (mAdView != null) {
       mAdView.pause();
   }
   mFirebaseAdapter.stopListening();
   super.onPause();
}

/** Called when returning to the activity */
@Override
public void onResume() {
   super.onResume();
   mFirebaseAdapter.startListening();
   if (mAdView != null) {
       mAdView.resume();
   }
}

/** Called before the activity is destroyed */
@Override
public void onDestroy() {
   if (mAdView != null) {
       mAdView.destroy();
   }
   super.onDestroy();
}



Test AdMob
Click the Run button.
Verify that Test Ad shows as in the screenshot in step 1.



================================res/values/strings.xml=============================================
<string name="banner_ad_unit_id" translatable="false">ca-app-pub-3940256099942544/6300978111</string>
