=====================Amend module build.gradle============================
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

dependencies {
    // ...
  implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
}

=====================Amend Project build.gradle============================
buildscript {
    repositories {
        // ...
        maven {
           url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        // ...
        classpath 'io.fabric.tools:gradle:1.24.4'
    }
}

======================Amend MainActivity.java===============================
@Override
public boolean onOptionsItemSelected(MenuItem item) {
   switch (item.getItemId()) {
       case R.id.crash_menu:
           Log.w("Crashlytics", "Crash button clicked");
           causeCrash();
           return true;
       case R.id.invite_menu:
           sendInvitation();
           return true;
       case R.id.fresh_config_menu:
           fetchConfig();
           return true;
       case R.id.sign_out_menu:
           mFirebaseAuth.signOut();
           mUsername = ANONYMOUS;
           startActivity(new Intent(this, SignInActivity.class));
           return true;
              default:
           return super.onOptionsItemSelected(item);
   }
}

private void causeCrash() {
   throw new NullPointerException("Fake null pointer exception");
}


Test with crashlytics
1. Activate app with firebase crashlytics. (Firebase console)
2. firebase console dashboard to find crash report.


========================Amend module build.gradle===============================
implementation 'com.google.firebase:firebase-analytics:16.0.1'

========================Amend MainActivity======================================
private FirebaseAnalytics mFirebaseAnalytics;

mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);  //onCreate


 Bundle payload = new Bundle();
           payload.putString(FirebaseAnalytics.Param.VALUE, "sent");   //"sent" can log in firebase console
           mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SHARE, payload);


===========================ExampleInstrumentedTest===============================
package com.lilintek.chat;

import android.content.Context;
import android.support.test.InstrumentationRegistry;
import android.support.test.espresso.matcher.ViewMatchers;
import android.support.test.rule.ActivityTestRule;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;

import static android.support.test.espresso.Espresso.onView;
import static android.support.test.espresso.assertion.ViewAssertions.matches;
import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Rule
    public ActivityTestRule<MainActivity> mActivityRule=new ActivityTestRule<>(MainActivity.class);

    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getTargetContext();
        assertEquals("com.lilintek.chat", appContext.getPackageName());
    }

    @Test
    public void verifySignUpButtonDisplayed() {
        onView(ViewMatchers.withId(R.id.sign_in_button)).check(matches(isDisplayed()));
    }
}



============================Amend module build.gradle============================================
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


